﻿<#@ template debug="false" hostspecific="false" language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
	var primitives = new[]
	{
		typeof(bool),
		typeof(byte),
		typeof(sbyte),
		typeof(decimal),
		typeof(double),
		typeof(float),
		typeof(int),
		// typeof(nint),
		typeof(uint),
		// typeof(nuint),
		typeof(long),
		typeof(ulong),
		typeof(short),
		typeof(ushort)
	};
#>
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY `Serializers/PrimitiveSerializer.tt`. DO NOT CHANGE IT.
// </auto-generated>
#nullable enable
namespace FakeExcelSerializer.Serializers
{
<# foreach (var type in primitives) { #>
    public sealed class <#= type.Name #>ExcelSerializer : IExcelSerializer<<#= type.Name #>>
    {        
		public void WriteTitle(ref ExcelSerializerWriter writer, <#= type.Name #> value, ExcelSerializerOptions options, string name = "value")
            => writer.Write(name);

        public void Serialize(ref ExcelSerializerWriter writer, <#= type.Name #> value, ExcelSerializerOptions options)
            => writer.WritePrimitive(value);
    }

<# } #>
}

namespace FakeExcelSerializer.Providers
{
    public sealed partial class PrimitiveExcelSerializerProvider
    {
        internal partial void InitPrimitives()
        {
<# foreach (var type in primitives) { #>
            serializers[typeof(<#= type #>)] = new FakeExcelSerializer.Serializers.<#= type.Name #>ExcelSerializer();
<# } #>
        }
    }
}