﻿<#@ template debug="false" hostspecific="false" language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Buffers" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Buffers" #>
<#@ output extension=".cs" #>
<#
    const int MaxTupleCount = 8;
    string BuildArgParameter(int i) => i.ToString();
    string BuildXmlParameter(int i) => string.Format(@"<c t=\""n\""><v>{0}</v></c>",i);
    string BuildArgsParameters(int i) => string.Join(", ", Enumerable.Range(1, i).Select(BuildArgParameter));
    string BuildXmlParameters(int i) => string.Join("",Enumerable.Range(1, i).Select(BuildXmlParameter));
    string BuildGetItemProperty(int i) => ((i == 8) ? "Rest" : $"Item{i}");
#>
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY `Serializers/TupleSerializers.tt`. DO NOT CHANGE IT.
// </auto-generated>
#nullable enable
namespace FakeExcelSerializer.Tests;

public partial class TupleSerializersTest
{
<# for(var i = 1; i <= MaxTupleCount; i++) { #>
    [Fact]
    public void Serializer_tuple<#= BuildArgParameter(i) #>()
    {
        var t = Tuple.Create(<#= BuildArgsParameters(i) #>);
        RunTest(t, "<#= BuildXmlParameters(i) #>", ExcelSerializerOptions.Default);
    }
<# } #>
}